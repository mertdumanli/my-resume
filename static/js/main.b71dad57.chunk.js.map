{"version":3,"sources":["page/Home.tsx","index.tsx"],"names":["Home","useState","myData","setMyData","darkMode","setDarkMode","language","setLanguage","showMap","setShowMap","indexAccordion","setIndexAccordion","musicIndex","setMusicIndex","profilePhotoIndex","setProfilePhotoIndex","useEffect","obj","myDataJson","Math","floor","random","personalInfo","profilPhotos","length","musics","links","document","body","style","backgroundColor","colorList","Container","Row","Navbar","className","ButtonGroup","size","Button","variant","onClick","Col","textAlign","xs","sm","md","lg","xl","xxl","Figure","Image","width","maxHeight","alt","src","Caption","ListGroup","Item","fontFamily","uuidv4","position","Card","checkPersonalInfo","birthplace","birthdate","gender","maritalStatus","nationality","militaryService","OverlayTrigger","overlay","Tooltip","id","Header","fontSize","Body","Title","names","autoPlay","controls","volume","Accordion","itemTexts","map","item","index","eventKey","toString","writeHeader","title","i","writeBodyEngTurk","detailEnglish","detailTurkish","href","contactAddresses","twitter","target","rel","color","itemColors","instagram","facebook","gmail","gitHub","tel","Offcanvas","height","placement","show","onHide","closeButton","mapOffCanvasHeader","mapOffCanvasTitle","openAddressEnglish","openAddressTurkish","mapOffCanvasBody","url","keyTurkish","keyEnglish","undefined","setSentenceUpperCaseFirstLetters","sentence","parcalar","split","j","charAt","toUpperCase","substring","toLowerCase","join","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b71dad57.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/home.css';\r\n\r\nimport { Button, Col, Row, Container, Navbar, ButtonGroup, Offcanvas, Accordion, ListGroup, Card, Figure, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { BsTwitter, BsInstagram, BsFacebook, BsGithub, BsTelephone } from 'react-icons/bs';\r\nimport { SiGmail } from 'react-icons/si'\r\n\r\nimport myDataJson from '../data/myData.json';\r\nimport { ItemTexts, MyDataModel } from '../models/MyDataModel';\r\n\r\nexport default function Home() {\r\n\r\n  const [myData, setMyData] = useState<MyDataModel>()\r\n\r\n  const [darkMode, setDarkMode] = useState(0);//0:Off - 1:On Dark Mode\r\n\r\n  const [language, setLanguage] = useState(0);//0:Eng - 1:Tr\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n\r\n  const [indexAccordion, setIndexAccordion] = useState(-1);\r\n\r\n  const [musicIndex, setMusicIndex] = useState(-1);\r\n  const [profilePhotoIndex, setProfilePhotoIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const obj = myDataJson as MyDataModel\r\n    setMyData(obj);\r\n\r\n    setProfilePhotoIndex(Math.floor(Math.random() * obj?.personalInfo.profilPhotos.length));\r\n    setMusicIndex(Math.floor(Math.random() * obj?.musics.links.length));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    darkMode === 0 ? document.body.style.backgroundColor = 'white' : document.body.style.backgroundColor = 'black'\r\n  }, [darkMode]);\r\n\r\n  const colorList = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"]\r\n\r\n  return (\r\n\r\n    <Container>\r\n      <Row>\r\n        <Navbar className=\"justify-content-md-end\">\r\n          <ButtonGroup size=\"sm\" className=\"m-2\">\r\n            <Button variant=\"outline-info\" onClick={() => setShowMap(true)}>Show Map</Button>\r\n            <Button variant=\"outline-info\" onClick={() => language === 0 ? setLanguage(1) : setLanguage(0)}>Language</Button>\r\n            <Button variant=\"outline-info\" onClick={() => darkMode === 0 ? setDarkMode(1) : setDarkMode(0)}>Brightness</Button>\r\n          </ButtonGroup>\r\n        </Navbar>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col style={{ textAlign: \"center\" }} xs={12} sm={12} md={12} lg={4} xl={4} xxl={4}>\r\n          <Figure>\r\n            <Figure.Image\r\n              width=\"70%\"\r\n              style={{ maxHeight: \"400px\" }}\r\n              className='img-fluid rounded'\r\n              alt=\"My profile picture is from Cloudinary\"\r\n              src={myData?.personalInfo.profilPhotos[profilePhotoIndex]}\r\n            />\r\n\r\n            <Figure.Caption>\r\n              <ListGroup>\r\n                <ListGroup.Item key={uuidv4()} variant='info' className={darkMode === 1 ? \"darkmode\" : \"\"} style={{ fontFamily: \"cursive\" }}>Mert DUMANLI</ListGroup.Item>\r\n                <ListGroup.Item key={uuidv4()} variant='success' className={darkMode === 1 ? \"darkmode\" : \"\"} style={{ fontFamily: \"cursive\" }}>{myData?.personalInfo.position[language]}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Figure.Caption>\r\n\r\n            <Card className='mt-2'>\r\n              <ListGroup>\r\n                {checkPersonalInfo(myData?.personalInfo.birthplace, \"Birth Place\", \"Doğum Yeri\")}\r\n                {checkPersonalInfo(myData?.personalInfo.birthdate, \"Birth Date\", \"Doğum Tarihi\")}\r\n                {checkPersonalInfo(myData?.personalInfo.gender, \"Gender\", \"Cinsiyet\")}\r\n                {checkPersonalInfo(myData?.personalInfo.maritalStatus, \"Marital Status\", \"Evlilik Durumu\")}\r\n                {checkPersonalInfo(myData?.personalInfo.nationality, \"Nationality\", \"Uyruk\")}\r\n                {checkPersonalInfo(myData?.personalInfo.militaryService, \"Military Service\", \"Askerlik Durumu\")}\r\n              </ListGroup>\r\n            </Card>\r\n            <Card className={darkMode === 1 ? \"darkmode mt-3\" : \"mt-3\"}>\r\n\r\n              <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">{language === 0 ? \"Royalty-free music\" : \"Telifsiz Müzik\"}</Tooltip>}>\r\n                <span className=\"d-inline-block\">\r\n                  <Card.Header style={{ fontSize: \"14px\", fontFamily: \"cursive\" }}>{language === 0 ? \"Music Place\" : \"Müzik Yeri\"}</Card.Header>\r\n                </span>\r\n              </OverlayTrigger>\r\n              <Card.Body>\r\n                <Card.Title style={{ fontSize: \"14px\", fontFamily: \"cursive\" }}>{myData?.musics.names[musicIndex]}</Card.Title>\r\n\r\n                <ReactAudioPlayer\r\n                  src={myData?.musics.links[musicIndex]}\r\n                  autoPlay={true}\r\n                  controls\r\n                  volume={0.27}\r\n                />\r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </Figure>\r\n\r\n\r\n        </Col>\r\n        <Col xs={12} sm={12} md={12} lg={8} xl={8} xxl={8} style={{ textAlign: 'center' }}>\r\n\r\n          <Accordion /*alwaysOpen defaultActiveKey={['0']}*/>{\r\n            myData?.itemTexts.map((item, index) =>\r\n              <Accordion.Item eventKey={index.toString()} key={index}>\r\n                {writeHeader(item.title, index)}\r\n                {writeBody(item)}\r\n              </Accordion.Item>\r\n            )\r\n          }\r\n          </Accordion>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className={indexAccordion !== -1 && (indexAccordion === 0 || indexAccordion === 1 || indexAccordion === 6) ? \"mx-auto\" : \"mx-auto fixed-bottom\"}>\r\n        <Col xs={1} sm={1} md={3} lg={3} xl={3} xxl={3}></Col>\r\n        <Col xs={true} sm={true} md={true} lg={true} xl={true} xxl={true} style={{ textAlign: 'center' }}>\r\n\r\n          <a href={myData?.contactAddresses?.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <BsTwitter className='m-3' style={{ color: myData?.itemColors.twitter[darkMode] }} id=\"socialMedia\" />\r\n          </a>\r\n          <a href={myData?.contactAddresses?.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <BsInstagram className='m-3' style={{ color: myData?.itemColors.instagram[darkMode] }} id=\"socialMedia\" />\r\n          </a>\r\n          <a href={myData?.contactAddresses?.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <BsFacebook className='m-3' style={{ color: myData?.itemColors.facebook[darkMode] }} id=\"socialMedia\" />\r\n          </a>\r\n          <a href={`mailto:` + myData?.contactAddresses?.gmail} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <SiGmail className='m-3' style={{ color: myData?.itemColors.gmail[darkMode] }} id=\"socialMedia\" />\r\n          </a>\r\n          <a href={myData?.contactAddresses?.gitHub} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <BsGithub className='m-3' style={{ color: myData?.itemColors.gitHub[darkMode] }} id=\"socialMedia\" />\r\n          </a>\r\n          <a href={`tel:` + myData?.contactAddresses?.tel} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <BsTelephone className='m-3' style={{ color: myData?.itemColors.tel[darkMode] }} id=\"socialMedia\" />\r\n          </a>\r\n\r\n        </Col>\r\n        <Col xs={1} sm={1} md={3} lg={3} xl={3} xxl={3}></Col>\r\n      </Row>\r\n\r\n      <Offcanvas style={{ height: \"auto\" }} placement='bottom' show={showMap} onHide={() => setShowMap(false)}>\r\n        <Offcanvas.Header closeButton style={{ backgroundColor: myData?.itemColors.mapOffCanvasHeader[darkMode] }}>\r\n          <Offcanvas.Title style={{ color: myData?.itemColors.mapOffCanvasTitle[darkMode] }}>{language === 0 ? \"Home : \" + myData?.map.openAddressEnglish : \"Ev : \" + myData?.map.openAddressTurkish}</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body style={{ backgroundColor: myData?.itemColors.mapOffCanvasBody[darkMode] }}>\r\n          <Row>\r\n            <Col xs={1} sm={1} md={1} lg={1} xl={2} xxl={3}></Col>\r\n            <Col xs={true} sm={true} md={true} lg={true} xl={true} xxl={true} >\r\n              <iframe title={myData?.map.title} src={myData?.map.url} width=\"640\" height=\"480\"></iframe>\r\n            </Col>\r\n            <Col xs={1} sm={1} md={1} lg={1} xl={2} xxl={3}></Col>\r\n          </Row>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n\r\n    </Container >\r\n\r\n  );\r\n  function writeBody(i: ItemTexts) {\r\n    return (language === 0 ? writeBodyEngTurk(i.detailEnglish) : writeBodyEngTurk(i.detailTurkish));\r\n  }\r\n\r\n  function writeBodyEngTurk(i: string[]) {\r\n    return (\r\n      <Accordion.Body className={darkMode === 1 ? \"darkmode\" : \"\"}>\r\n        <ListGroup variant=\"flush\">\r\n          {i.map((item, index) =>\r\n            <Card><ListGroup.Item variant='primary' key={index} style={{ fontFamily: \"cursive\" }}>{item}</ListGroup.Item></Card>\r\n          )}\r\n        </ListGroup>\r\n      </Accordion.Body>\r\n    );\r\n  }\r\n  function writeHeader(i: (string)[], index: React.SetStateAction<number>) {\r\n    return (\r\n      <Accordion.Header onClick={() => index === indexAccordion ? setIndexAccordion(-1) : setIndexAccordion(index)} className={darkMode === 1 ? \"darkmode\" : \"\"} style={{ fontFamily: \"cursive\" }}>\r\n        {i[language]}\r\n      </Accordion.Header>);\r\n  }\r\n\r\n  function checkPersonalInfo(item: string[] | undefined, keyTurkish: string, keyEnglish: string) {\r\n    return (\r\n      item !== undefined && item.length !== 0 && item.length === 2 ? <ListGroup.Item variant={colorList[(Math.floor(Math.random() * colorList.length))]} key={uuidv4()} className={darkMode === 1 ? \"darkmode\" : \"\"} style={{ fontFamily: \"cursive\" }}>{language === 0 ? keyTurkish + \": \" + setSentenceUpperCaseFirstLetters(item[0]) : keyEnglish + \": \" + setSentenceUpperCaseFirstLetters(item[1])}</ListGroup.Item> : \"\"\r\n    );\r\n  }\r\n  function setSentenceUpperCaseFirstLetters(sentence: string) {\r\n    var parcalar = sentence.split(\" \");\r\n    for (var i = 0; i < parcalar.length; i++) {\r\n      var j = parcalar[i].charAt(0).toUpperCase();\r\n      parcalar[i] = j + parcalar[i].substring(1).toLowerCase();\r\n    }\r\n    return parcalar.join(\" \");\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './page/Home';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}